<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMYAAAAjCAYAAADPEnVsAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABENJREFUeF7tmAtyhCAMhj2XB/I8nmYvs4exJgEhEDDgbls03wzTrvIM+RNw2gzD
        yDBhGIaACcMwBEwYhiFgwjAMAROG473O27y+3a8ar22Z5k1V1RiW8YTxXrd5mrbJl3ndrvtom7PrRWSM
        yljCeC27GLgDf8RJod8WgbXWN4ZjIGFAVJ+25eV+iry3dY6yybTsrQIgovAuCOy17L/jjjErRQJMf9tx
        6vaMIwx0Tu7oHCeKyMFJCK5NsT21S7MOtsWsIL2nZ3WRGiMzjjDwGFURhuj4UWTH95IzlzIRPZ9nLxAO
        ZBm7Z9yX+whDfJ9EdicOOEoFp64c0bBP+d2owtDfybTHRbDx/Y6VjcIAI1ScE9kN+pWLacWBgbOMwYj7
        KvXr2q6yIH9NGE6cvsTzxLtRk61L9pCpi4iCDoy/Lt5Ohb6TNXzTbvweWfGXEwRhuAVHnR8LgQUqRoIN
        651QDVo0N37YPDfvaGCsLzoO1aWq9H+6Weh0WCHvl7dvobFddvzbHftK0IH9a2mvqe+zcHFRiRixvl6c
        nBP7Qd/RfMlfzgK5TEEY8sTVDq8UUA9pROAbR9FffJdErXh+QQQOrBsZNNvMtsgb6BFGeRw+b993bAPe
        Nltn2n/TOmk8sHE1Y2CfsXNGfZ6On/JZ+9VoEEZiJBZNkjaZMSJSB8XSp+qPwdaiIBWOmsaNdfVLRxRJ
        GHFd6X2aGUNWld5r5gt15Pl5cB5or3yM+vgpmvlEdO+T8ihFEwFh8EFgwbAQWBxfUF73yWRZ7ig6G5Fj
        QeEOKDk+cxomeNgTyano+be/vh1ryMaojw/02U8jtDL6jCFmAVpUPkF4Xo8iLchG+T9FT2PESyAHqWeE
        dmHsYGSV310XBh83XQNSGZ+jtx/apiA0DY1HqUQAKBZwDkkYBTU7I/BSqHs7rgkjbf8ZYcDzfb+/9PUN
        hcAclOYZ+qyPz9HZ76oogP47RjRJXHw829od49HoNtYDdmVOiUEl7EGbMOh96uShD3rP9rFxviI458gX
        XDD1fdbHTzmbj+vjoiiABmHQIvykuBiSaATGqC7wjzkyHRXNVHED97rXjhWtuI0+5sr3pU0Yaf0d0Wnj
        MdJg2Ie3nS+HDU/HbwT742Nh6fDFlgMyDawYJBbQ/4NEzDfnZDOgzrxsy+54vyuMD4PraIimaJtnZv42
        YaBTnRlKU6eDNJr0Rpdss3XpeXnR36GFgXujt1mWYR5EozD+lnCR63fS88sgJxwZ7yAMWo9uDZ85Ro3K
        UMKgzdqds/LN+4xcGBQZRWfBrOSzyz2EYegYTBg7eBQqH33Q8f2lSzjS6TMGPQ/jmDCexIAZY0/vqm/e
        BdR3DMpOQWRR6cxWxjgMJYxwGSRn7rsYksMfTZlQav1axngS4wgjjfRXvnljWxf9WR8mDIMY745hGL+A
        CcMwBEwYhiFgwjAMAROGYQiYMAwjY9t+AJzakYZ0l0dHAAAAAElFTkSuQmCC
</value>
  </data>
</root>